@import url('http://fonts.googleapis.com/css?family=Poppins:200,300,400,600,700,800,900&display=swap');

*
{
    font-family: 'Poppins', sans-serif;
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

body 
{
    display:flex;
    justify-content:center;
    padding-top : 143px;
    align-items:center;
    background: #b87a98;
}




.container 
{
    position: relative;
    background: #2f363e;
    /*min-height: 500px;*/
    border-radius : 22px;
    border-top-left-radius: 225px;
    border-top-right-radius: 225px;
    box-shadow: 25px 25px 75px rgba(0, 0, 0, 0.75),
    10px 50px 70px rgba(0, 0, 0, 0.25),
    inset 5px 5px 10px rgba(0,0,0,0.5) ,/* en haut à gauche/en bas à droite */
    inset 5px 5px 20px rgba(225,225,225,0.2),
    inset -5px -5px 15px rgba(0,0,0,0.75);
    display: flex;
    justify-content: center;
    align-items: center;
    flex-direction: column;
   
}

.clock
{
    position: relative;
    width: 450px;
    height: 450px;
    background: #364352;
    border-radius: 50%;
    box-shadow: 10px 50px 70px rgba(0, 0, 0, 0.25),
    /*La propriété CSS inset est un raccourci qui correspond aux propriétés top , right , bottom et/ou left 
    Il définit les décalages physiques , quels que soient le mode d'écriture, la directionnalité et l'orientation du texte de l'élément.*/
    inset 5px 5px 10px rgba(0,0,0,0.5) ,/* en haut à gauche/en bas à droite */
    inset 5px 5px 20px rgba(225,225,225,0.2),
    inset -5px -5px 15px rgba(0,0,0,0.75);
    display: flex;
    justify-content: center;
    align-items: center;
    margin-bottom: 33px;
}   

/*Vice des aiguilles de l'orgloge*/
.clock::before
{
    content: '';
    position: absolute;
    width: 8px;
    height: 8px;
    background: #2f363e;
    border: 3px solid #fff;
    border-radius: 50%;
    z-index: 100000;
}

/*les chiffres du cadrant*/
.clock span
{
    position: absolute;
    inset: 20px;
    color: #fff;
    text-align: center;
    transform: rotate(calc(30deg * var(--i))); /*La fonction rotate() définit une transformation qui déplace un élément autour d'un point fixe*/

}

.clock span b
{
    font-size: 2em;
    opacity: 0.25;
    font-weight: 600;
    display: inline-block;
    transform: rotate(calc(-30deg * var(--i)));
}

.circle
{
    position: absolute;
    width: 300px;
    height: 300px;
    border: 2px solid rgba(0,0,0,0.25);
    border-radius: 50%;
    display: flex;
    justify-content: center;
    align-items: flex-start;
    z-index:10;
}

/*Aiguilles*/
.circle i
{
    position: absolute;
    width: 6px;
    height: 50%;
    background: var(--clr);
    opacity: 0.5;
    transform-origin: bottom; /*La propriété transform-origin permet de modifier la position des éléments transformés.*/
    transform: scaleY(0.5); /*La fonction scale() de la propriété transform permet d'agrandir l'échelle ou de réduire d'échelle d'un élément HTML.*/
}

.circle:nth-child(1) i /*Si un chiffre est spécifié, seul un élément sera sélectionné, par exemple :nth-child(1) sélectionne le 1èr module dans notre HTML*/
{
    width: 2px;
}

.circle :nth-child(2) i
{
    width: 6px;
}

.circle :nth-child(3) i
{
    width: 11px;
}

.circle2
{
    width: 240px;
    height: 240px;
    z-index: 9;/*Lorsque des éléments se chevauchent, le z-order détermine l'ordre des différentes couches que formeront les éléments*/
}

.circle3
{
    width: 180px;
    height: 180px;
    z-index: 8;
}

.circle::before
{
    content: '';
    position: absolute;
    top: -8.5px;
    width: 15px;
    height: 15px;
    border-radius: 50%;
    background: var(--clr);
    box-shadow: 0 0 20px var(--clr),
    0 0 60px var(--clr);

}

/* Digital clock */

#time
{
    margin-bottom: 40px;
    display: flex;
    padding: 10px 20px;
    font-size: 2em;
    font-weight: 600;
    border: 2px solid rgba(0,0,0,0.5);
    border-radius: 40px;
    box-shadow: 5px 5px 10px rgba(0,0,0,0.5),
    inset 5px 5px 20px rgba(255,255,255,0.2),
    inset -5px -5px 15px rgba(0,0,0,0.75);

}

#time div
{
    position: relative;
    width: 60px;
    text-align: center;
    font-weight: 500;
    color: var(--clr);
}

#time div:nth-child(1)::after,
#time div:nth-child(2)::after
{
    content: ':';
    position: absolute;
    right: -4px;
}

#time div:last-child
{
    font-size: 0.5em;
    display: flex;
    justify-content: center;
    align-items:center;
    color: #fff;
}

#time div:nth-child(2)::after
{
    animation: animate 1s steps(1) infinite;
}

/*La règle @keyframes permet aux auteurs de définir les étapes qui composent la séquence d'une animation CSS. 
Cela permet de contrôler une animation plus finement que ce qu'on pourrait obtenir avec les transitions.*/
@keyframes animate
{
    0%
    {
        opacity: 1;
    }

    50%
    {
        opacity: 0;
    }
}


/* Mode responsive */

@media screen and (max-width:500px) {
   
    .container {
        display: flex;
        justify-content: center;
        width : 420px;
        height : 640px;
    }

    #time div{
        width : 74px;
        height : 44px;
    }

    .clock {
       
        width: 464px;
        height: 580px;
       
    }

   